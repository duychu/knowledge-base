"use strict";(self.webpackChunkknowledge_base=self.webpackChunkknowledge_base||[]).push([[7701],{652:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"homelab/buildkit","title":"Buildkit","description":"Buildkit is great replacement for kaniko which is simply dead because of no maintainer","source":"@site/docs/homelab/04-buildkit.md","sourceDirName":"homelab","slug":"/homelab/buildkit","permalink":"/knowledge-base/docs/homelab/buildkit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/homelab/04-buildkit.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"homelabSidebar","previous":{"title":"Cloud Ide - Theia","permalink":"/knowledge-base/docs/homelab/ide"}}');var o=t(4848),s=t(8453);const a={sidebar_position:1},r="Buildkit",l={},c=[{value:"Setup in homelab",id:"setup-in-homelab",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"buildkit",children:"Buildkit"})}),"\n",(0,o.jsx)(n.p,{children:"Buildkit is great replacement for kaniko which is simply dead because of no maintainer"}),"\n",(0,o.jsx)(n.p,{children:"The great thing about it is it support rootless setup so we can improve our build process without compromises security"}),"\n",(0,o.jsx)(n.h2,{id:"setup-in-homelab",children:"Setup in homelab"}),"\n",(0,o.jsxs)(n.p,{children:["Because in homelab we use custom ca-certificate, so to make it works properly, I found that the easies way is to update ca-certiciate.crt\nfrom base image moby/buildkit",":rootless"]}),"\n",(0,o.jsx)(n.p,{children:"I have tried multiple way to avoid doing that, but result is not good at all. That is why I ended up with below Dockerfile to build my own rootless base image for my docker pipeline"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"FROM moby/buildkit:v0.22.0-rootless\n\n# REFER: https://github.com/moby/buildkit/blob/v0.22.0/Dockerfile\n# this ca is for homelab\n\nUSER root\nCOPY --chown=1000:1000 ca.crt ca.crt\nRUN cat ca.crt >> /etc/ssl/certs/ca-certificates.crt\nUSER 1000:1000\n"})}),"\n",(0,o.jsx)(n.p,{children:"In gitlab ci, you can setup build stage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'variables:\n  CONTEXT_PATH: ""  # in case we need specify different context path than default $CI_PROJECT_DIR  \n  DOCKER_FILE: "Dockerfile" # declare DOCKER_FILE variable in case the location is different than default\n  DOCKER_TAG: NA\n  BUILD_ARGS: "" # in case we need build-args we define empty variable that could be reused later and used for kaniko/buildkit build\n\n.docker_build: \n  image:\n    name: harbor.homelab.duychu.link/library/moby/buildkit:v0.22.0-rootless  # <-- customized from buildkit\n    entrypoint: [""]\n  stage: build\n  variables:\n    # enable this when using rootless buildkit\n    BUILDKITD_FLAGS: --oci-worker-no-process-sandbox --trace\n  before_script:\n    - env\n    - mkdir -p ~/.docker\n    - |\n      cat > ~/.docker/config.json << EOF\n      {\n        "auths": {\n          "": {\n            "auth": "$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d \'\\n\')"\n          },\n          "$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] \'{print $1}\')": {\n            "auth": "$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d \'\\n\')"\n          },\n          "$HARBOR": {\n            "auth": "$(printf "%s:%s" ${HARBOR_USER} "${HARBOR_PASSWORD}" | base64 | tr -d \'\\n\')"\n          }\n        }\n      }\n      EOF\n    - cat ~/.docker/config.json\n  script:\n    # [Buildkit configuration]                  https://docs.docker.com/build/buildkit/toml-configuration/\n    # [Specify name of dockerfile in buildkit]  https://github.com/moby/buildkit/issues/684\n    - export BUILDKITD_FLAGS="$BUILDKITD_FLAGS"\n    - |\n      buildctl-daemonless.sh build \\\n        --frontend dockerfile.v0 \\\n        --local context=$CI_PROJECT_DIR/$CONTEXT_PATH \\\n        --local dockerfile=$CI_PROJECT_DIR \\\n        --opt filename=$DOCKER_FILE \\\n        --output type=image,name=$DOCKER_IMAGE:$DOCKER_TAG,push=true \\\n        ${BUILD_ARGS}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["then in main pipeline, you can reuse it by extending the ",(0,o.jsx)(n.code,{children:".docker_build"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"build-staging:\n  extends: .docker_build\n  rules:\n    ...\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);